Here's an example of reusable HTML templates for a header and footer in a Thymeleaf application. These templates can be included in other Thymeleaf pages using fragments.

Header Template: header.html
html
Copy code
<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org">
<head>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
<div th:fragment="header">
    <nav class="navbar navbar-expand-lg navbar-light bg-light">
        <div class="container-fluid">
            <a class="navbar-brand" href="/">MyApp</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav me-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="/home">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/about">About</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/contact">Contact</a>
                    </li>
                </ul>
                <ul class="navbar-nav">
                    <li class="nav-item" th:if="${isAuthenticated()}">
                        <a class="nav-link" href="/profile" th:text="'Welcome, ' + ${#authentication.name}"></a>
                    </li>
                    <li class="nav-item" th:if="${isAuthenticated()}">
                        <form action="/logout" method="post" th:action="@{/logout}" style="display: inline;">
                            <button class="btn btn-outline-danger btn-sm" type="submit">Logout</button>
                        </form>
                    </li>
                    <li class="nav-item" th:if="${!isAuthenticated()}">
                        <a class="nav-link" href="/login">Login</a>
                    </li>
                    <li class="nav-item" th:if="${!isAuthenticated()}">
                        <a class="nav-link" href="/register">Register</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
</div>
</body>
</html>
Footer Template: footer.html
html
Copy code
<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org">
<head>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
<div th:fragment="footer">
    <footer class="footer bg-light mt-auto py-3">
        <div class="container text-center">
            <span class="text-muted">Â© 2024 MyApp. All rights reserved.</span>
        </div>
    </footer>
</div>
</body>
</html>
Including the Header and Footer in a Page
In your main page template, include the header and footer fragments using th:insert or th:replace.

Example: home.html
html
Copy code
<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org">
<head>
    <title>Home Page</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <!-- Include Header -->
    <div th:insert="fragments/header :: header"></div>

    <!-- Page Content -->
    <div class="container mt-5">
        <h1>Welcome to MyApp</h1>
        <p>This is the home page content.</p>
    </div>

    <!-- Include Footer -->
    <div th:insert="fragments/footer :: footer"></div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
Folder Structure
Ensure the templates are saved in the appropriate folders:

css
Copy code
src/main/resources/templates/
    fragments/
        header.html
        footer.html
    home.html
Dynamic Data in Header/Footer
Use Thymeleaf expressions (e.g., ${isAuthenticated()} or ${#authentication.name}) to dynamically render user-specific data.
Add any additional CSS/JS files required for specific pages or sections.
This structure provides reusable and clean header and footer templates for your Spring Boot application. Let me know if you need further adjustments!